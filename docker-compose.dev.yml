version: '2.2'

services:
  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: setup
    user: "0"
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - ./config/setup.sh:/usr/share/elasticsearch/config/setup.sh
      - ./config/instances.yml:/usr/share/elasticsearch/config/instances.yml:ro
    environment:
      ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD}
      ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME}
      KIBANA_PASSWORD: ${KIBANA_PASSWORD}
    command: bash /usr/share/elasticsearch/config/setup.sh
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/es-master/es-master.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120

  elasticsearch:
    depends_on:
      setup:
        condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: elasticsearch
    hostname: es-master
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
      - elasticsearch-data:/usr/share/elasticsearch/data
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    environment:
      discovery.type: single-node
      ELASTIC_PASSWORD: ${ELASTICSEARCH_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --cacert config/certs/ca/ca.crt https://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    depends_on:
      elasticsearch:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: kibana
    hostname: kibana
    ports:
      - 5601:5601
    volumes:
      - certs:/usr/share/kibana/config/certs
      - kibana-data:/usr/share/kibana/data
      - ./config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    environment:
      CONFIG_DIR: /usr/share/kibana/config
      ELASTICSEARCH_USERNAME: kibana_system
      ELASTICSEARCH_PASSWORD: ${KIBANA_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s --insecure -I https://0.0.0.0:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  happy:
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: happy
    hostname: happy
    ports:
      - 8000:8000
    volumes:
      - ./scripts/docker_entrypoint.sh:/app/docker_entrypoint.sh:ro
      - ./pyproject.toml:/app/pyproject.toml:ro
      - ./README.md:/app/README.md:ro
      - ./happy:/app/happy:ro
    env_file: .env

volumes:
  certs:
    driver: local
  elasticsearch-data:
    driver: local
  kibana-data:
    driver: local
